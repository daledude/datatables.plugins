///<reference path="./Scripts/jaydata.d.ts" />

/*//////////////////////////////////////////////////////////////////////////////////////
////// Autogenerated by JaySvcUtil.exe http://JayData.org for more info        /////////
//////                      oData  V3  TypeScript                              /////////
//////////////////////////////////////////////////////////////////////////////////////*/


declare module Model_Northwind_EF {
  export class Alphabetical_list_of_products extends $data.Entity {
    constructor();
    constructor(initData: { ProductID?: number; ProductName?: string; Discontinued?: boolean; CategoryName?: string; SupplierID?: number; CategoryID?: number; QuantityPerUnit?: string; UnitPrice?: string; UnitsInStock?: number; UnitsOnOrder?: number; ReorderLevel?: number; });
    ProductID: number;
    ProductName: string;
    Discontinued: boolean;
    CategoryName: string;
    SupplierID: number;
    CategoryID: number;
    QuantityPerUnit: string;
    UnitPrice: string;
    UnitsInStock: number;
    UnitsOnOrder: number;
    ReorderLevel: number;
    
  }
  
  export class Categories extends $data.Entity {
    constructor();
    constructor(initData: { CategoryID?: number; CategoryName?: string; Description?: string; Picture?: Uint8Array; Products?: Model_Northwind_EF.Products[]; });
    CategoryID: number;
    CategoryName: string;
    Description: string;
    Picture: Uint8Array;
    Products: Model_Northwind_EF.Products[];
    
  }
  
  export class Products extends $data.Entity {
    constructor();
    constructor(initData: { ProductID?: number; ProductName?: string; SupplierID?: number; CategoryID?: number; QuantityPerUnit?: string; UnitPrice?: string; UnitsInStock?: number; UnitsOnOrder?: number; ReorderLevel?: number; Discontinued?: boolean; Categories?: Model_Northwind_EF.Categories; Order_Details?: Model_Northwind_EF.Order_Details[]; Suppliers?: Model_Northwind_EF.Suppliers; });
    ProductID: number;
    ProductName: string;
    SupplierID: number;
    CategoryID: number;
    QuantityPerUnit: string;
    UnitPrice: string;
    UnitsInStock: number;
    UnitsOnOrder: number;
    ReorderLevel: number;
    Discontinued: boolean;
    Categories: Model_Northwind_EF.Categories;
    Order_Details: Model_Northwind_EF.Order_Details[];
    Suppliers: Model_Northwind_EF.Suppliers;
    
  }
  
  export class Order_Details extends $data.Entity {
    constructor();
    constructor(initData: { OrderID?: number; ProductID?: number; UnitPrice?: string; Quantity?: number; Discount?: number; Orders?: Model_Northwind_EF.Orders; Products?: Model_Northwind_EF.Products; });
    OrderID: number;
    ProductID: number;
    UnitPrice: string;
    Quantity: number;
    Discount: number;
    Orders: Model_Northwind_EF.Orders;
    Products: Model_Northwind_EF.Products;
    
  }
  
  export class Orders extends $data.Entity {
    constructor();
    constructor(initData: { OrderID?: number; CustomerID?: string; EmployeeID?: number; OrderDate?: Date; RequiredDate?: Date; ShippedDate?: Date; ShipVia?: number; Freight?: string; ShipName?: string; ShipAddress?: string; ShipCity?: string; ShipRegion?: string; ShipPostalCode?: string; ShipCountry?: string; Customers?: Model_Northwind_EF.Customers; Employees?: Model_Northwind_EF.Employees; Order_Details?: Model_Northwind_EF.Order_Details[]; Shippers?: Model_Northwind_EF.Shippers; });
    OrderID: number;
    CustomerID: string;
    EmployeeID: number;
    OrderDate: Date;
    RequiredDate: Date;
    ShippedDate: Date;
    ShipVia: number;
    Freight: string;
    ShipName: string;
    ShipAddress: string;
    ShipCity: string;
    ShipRegion: string;
    ShipPostalCode: string;
    ShipCountry: string;
    Customers: Model_Northwind_EF.Customers;
    Employees: Model_Northwind_EF.Employees;
    Order_Details: Model_Northwind_EF.Order_Details[];
    Shippers: Model_Northwind_EF.Shippers;
    
  }
  
  export class Customers extends $data.Entity {
    constructor();
    constructor(initData: { CustomerID?: string; CompanyName?: string; ContactName?: string; ContactTitle?: string; Address?: string; City?: string; Region?: string; PostalCode?: string; Country?: string; Phone?: string; Fax?: string; CustomerDemographics?: Model_Northwind_EF.CustomerDemographics[]; Orders?: Model_Northwind_EF.Orders[]; });
    CustomerID: string;
    CompanyName: string;
    ContactName: string;
    ContactTitle: string;
    Address: string;
    City: string;
    Region: string;
    PostalCode: string;
    Country: string;
    Phone: string;
    Fax: string;
    CustomerDemographics: Model_Northwind_EF.CustomerDemographics[];
    Orders: Model_Northwind_EF.Orders[];
    
  }
  
  export class CustomerDemographics extends $data.Entity {
    constructor();
    constructor(initData: { CustomerTypeID?: string; CustomerDesc?: string; Customers?: Model_Northwind_EF.Customers[]; });
    CustomerTypeID: string;
    CustomerDesc: string;
    Customers: Model_Northwind_EF.Customers[];
    
  }
  
  export class Employees extends $data.Entity {
    constructor();
    constructor(initData: { EmployeeID?: number; LastName?: string; FirstName?: string; Title?: string; TitleOfCourtesy?: string; BirthDate?: Date; HireDate?: Date; Address?: string; City?: string; Region?: string; PostalCode?: string; Country?: string; HomePhone?: string; Extension?: string; Photo?: Uint8Array; Notes?: string; ReportsTo?: number; PhotoPath?: string; Employees1?: Model_Northwind_EF.Employees[]; Employees2?: Model_Northwind_EF.Employees; Orders?: Model_Northwind_EF.Orders[]; Territories?: Model_Northwind_EF.Territories[]; });
    EmployeeID: number;
    LastName: string;
    FirstName: string;
    Title: string;
    TitleOfCourtesy: string;
    BirthDate: Date;
    HireDate: Date;
    Address: string;
    City: string;
    Region: string;
    PostalCode: string;
    Country: string;
    HomePhone: string;
    Extension: string;
    Photo: Uint8Array;
    Notes: string;
    ReportsTo: number;
    PhotoPath: string;
    Employees1: Model_Northwind_EF.Employees[];
    Employees2: Model_Northwind_EF.Employees;
    Orders: Model_Northwind_EF.Orders[];
    Territories: Model_Northwind_EF.Territories[];
    
  }
  
  export class Territories extends $data.Entity {
    constructor();
    constructor(initData: { TerritoryID?: string; TerritoryDescription?: string; RegionID?: number; Employees?: Model_Northwind_EF.Employees[]; Region?: Model_Northwind_EF.Region; });
    TerritoryID: string;
    TerritoryDescription: string;
    RegionID: number;
    Employees: Model_Northwind_EF.Employees[];
    Region: Model_Northwind_EF.Region;
    
  }
  
  export class Region extends $data.Entity {
    constructor();
    constructor(initData: { RegionID?: number; RegionDescription?: string; Territories?: Model_Northwind_EF.Territories[]; });
    RegionID: number;
    RegionDescription: string;
    Territories: Model_Northwind_EF.Territories[];
    
  }
  
  export class Shippers extends $data.Entity {
    constructor();
    constructor(initData: { ShipperID?: number; CompanyName?: string; Phone?: string; Orders?: Model_Northwind_EF.Orders[]; });
    ShipperID: number;
    CompanyName: string;
    Phone: string;
    Orders: Model_Northwind_EF.Orders[];
    
  }
  
  export class Suppliers extends $data.Entity {
    constructor();
    constructor(initData: { SupplierID?: number; CompanyName?: string; ContactName?: string; ContactTitle?: string; Address?: string; City?: string; Region?: string; PostalCode?: string; Country?: string; Phone?: string; Fax?: string; HomePage?: string; Products?: Model_Northwind_EF.Products[]; });
    SupplierID: number;
    CompanyName: string;
    ContactName: string;
    ContactTitle: string;
    Address: string;
    City: string;
    Region: string;
    PostalCode: string;
    Country: string;
    Phone: string;
    Fax: string;
    HomePage: string;
    Products: Model_Northwind_EF.Products[];
    
  }
  
  export class Category_Sales_for_1997 extends $data.Entity {
    constructor();
    constructor(initData: { CategoryName?: string; CategorySales?: string; });
    CategoryName: string;
    CategorySales: string;
    
  }
  
  export class Current_Product_List extends $data.Entity {
    constructor();
    constructor(initData: { ProductID?: number; ProductName?: string; });
    ProductID: number;
    ProductName: string;
    
  }
  
  export class Customer_and_Suppliers_by_City extends $data.Entity {
    constructor();
    constructor(initData: { CompanyName?: string; Relationship?: string; City?: string; ContactName?: string; });
    CompanyName: string;
    Relationship: string;
    City: string;
    ContactName: string;
    
  }
  
  export class Invoices extends $data.Entity {
    constructor();
    constructor(initData: { CustomerName?: string; Salesperson?: string; OrderID?: number; ShipperName?: string; ProductID?: number; ProductName?: string; UnitPrice?: string; Quantity?: number; Discount?: number; ShipName?: string; ShipAddress?: string; ShipCity?: string; ShipRegion?: string; ShipPostalCode?: string; ShipCountry?: string; CustomerID?: string; Address?: string; City?: string; Region?: string; PostalCode?: string; Country?: string; OrderDate?: Date; RequiredDate?: Date; ShippedDate?: Date; ExtendedPrice?: string; Freight?: string; });
    CustomerName: string;
    Salesperson: string;
    OrderID: number;
    ShipperName: string;
    ProductID: number;
    ProductName: string;
    UnitPrice: string;
    Quantity: number;
    Discount: number;
    ShipName: string;
    ShipAddress: string;
    ShipCity: string;
    ShipRegion: string;
    ShipPostalCode: string;
    ShipCountry: string;
    CustomerID: string;
    Address: string;
    City: string;
    Region: string;
    PostalCode: string;
    Country: string;
    OrderDate: Date;
    RequiredDate: Date;
    ShippedDate: Date;
    ExtendedPrice: string;
    Freight: string;
    
  }
  
  export class Order_Details_Extended extends $data.Entity {
    constructor();
    constructor(initData: { OrderID?: number; ProductID?: number; ProductName?: string; UnitPrice?: string; Quantity?: number; Discount?: number; ExtendedPrice?: string; });
    OrderID: number;
    ProductID: number;
    ProductName: string;
    UnitPrice: string;
    Quantity: number;
    Discount: number;
    ExtendedPrice: string;
    
  }
  
  export class Order_Subtotals extends $data.Entity {
    constructor();
    constructor(initData: { OrderID?: number; Subtotal?: string; });
    OrderID: number;
    Subtotal: string;
    
  }
  
  export class Orders_Qry extends $data.Entity {
    constructor();
    constructor(initData: { OrderID?: number; CompanyName?: string; CustomerID?: string; EmployeeID?: number; OrderDate?: Date; RequiredDate?: Date; ShippedDate?: Date; ShipVia?: number; Freight?: string; ShipName?: string; ShipAddress?: string; ShipCity?: string; ShipRegion?: string; ShipPostalCode?: string; ShipCountry?: string; Address?: string; City?: string; Region?: string; PostalCode?: string; Country?: string; });
    OrderID: number;
    CompanyName: string;
    CustomerID: string;
    EmployeeID: number;
    OrderDate: Date;
    RequiredDate: Date;
    ShippedDate: Date;
    ShipVia: number;
    Freight: string;
    ShipName: string;
    ShipAddress: string;
    ShipCity: string;
    ShipRegion: string;
    ShipPostalCode: string;
    ShipCountry: string;
    Address: string;
    City: string;
    Region: string;
    PostalCode: string;
    Country: string;
    
  }
  
  export class Product_Sales_for_1997 extends $data.Entity {
    constructor();
    constructor(initData: { CategoryName?: string; ProductName?: string; ProductSales?: string; });
    CategoryName: string;
    ProductName: string;
    ProductSales: string;
    
  }
  
  export class Products_Above_Average_Price extends $data.Entity {
    constructor();
    constructor(initData: { ProductName?: string; UnitPrice?: string; });
    ProductName: string;
    UnitPrice: string;
    
  }
  
  export class Products_by_Category extends $data.Entity {
    constructor();
    constructor(initData: { CategoryName?: string; ProductName?: string; Discontinued?: boolean; QuantityPerUnit?: string; UnitsInStock?: number; });
    CategoryName: string;
    ProductName: string;
    Discontinued: boolean;
    QuantityPerUnit: string;
    UnitsInStock: number;
    
  }
  
  export class Sales_by_Category extends $data.Entity {
    constructor();
    constructor(initData: { CategoryID?: number; CategoryName?: string; ProductName?: string; ProductSales?: string; });
    CategoryID: number;
    CategoryName: string;
    ProductName: string;
    ProductSales: string;
    
  }
  
  export class Sales_Totals_by_Amount extends $data.Entity {
    constructor();
    constructor(initData: { OrderID?: number; CompanyName?: string; SaleAmount?: string; ShippedDate?: Date; });
    OrderID: number;
    CompanyName: string;
    SaleAmount: string;
    ShippedDate: Date;
    
  }
  
  export class Summary_of_Sales_by_Quarter extends $data.Entity {
    constructor();
    constructor(initData: { OrderID?: number; ShippedDate?: Date; Subtotal?: string; });
    OrderID: number;
    ShippedDate: Date;
    Subtotal: string;
    
  }
  
  export class Summary_of_Sales_by_Year extends $data.Entity {
    constructor();
    constructor(initData: { OrderID?: number; ShippedDate?: Date; Subtotal?: string; });
    OrderID: number;
    ShippedDate: Date;
    Subtotal: string;
    
  }
  
  export class Northwind extends $data.EntityContext {
      onReady(): $data.IPromise<Northwind>;
      onReady(handler: (context: Northwind) => void): $data.IPromise<Northwind>;
    
    Alphabetical_list_of_products: $data.EntitySet<Model_Northwind_EF.Alphabetical_list_of_products>;
    Categories: $data.EntitySet<Model_Northwind_EF.Categories>;
    Products: $data.EntitySet<Model_Northwind_EF.Products>;
    Order_Details: $data.EntitySet<Model_Northwind_EF.Order_Details>;
    Orders: $data.EntitySet<Model_Northwind_EF.Orders>;
    Customers: $data.EntitySet<Model_Northwind_EF.Customers>;
    CustomerDemographics: $data.EntitySet<Model_Northwind_EF.CustomerDemographics>;
    Employees: $data.EntitySet<Model_Northwind_EF.Employees>;
    Territories: $data.EntitySet<Model_Northwind_EF.Territories>;
    Region: $data.EntitySet<Model_Northwind_EF.Region>;
    Shippers: $data.EntitySet<Model_Northwind_EF.Shippers>;
    Suppliers: $data.EntitySet<Model_Northwind_EF.Suppliers>;
    Category_Sales_for_1997: $data.EntitySet<Model_Northwind_EF.Category_Sales_for_1997>;
    Current_Product_List: $data.EntitySet<Model_Northwind_EF.Current_Product_List>;
    Customer_and_Suppliers_by_City: $data.EntitySet<Model_Northwind_EF.Customer_and_Suppliers_by_City>;
    Invoices: $data.EntitySet<Model_Northwind_EF.Invoices>;
    Order_Details_Extended: $data.EntitySet<Model_Northwind_EF.Order_Details_Extended>;
    Order_Subtotals: $data.EntitySet<Model_Northwind_EF.Order_Subtotals>;
    Orders_Qry: $data.EntitySet<Model_Northwind_EF.Orders_Qry>;
    Product_Sales_for_1997: $data.EntitySet<Model_Northwind_EF.Product_Sales_for_1997>;
    Products_Above_Average_Price: $data.EntitySet<Model_Northwind_EF.Products_Above_Average_Price>;
    Products_by_Category: $data.EntitySet<Model_Northwind_EF.Products_by_Category>;
    Sales_by_Category: $data.EntitySet<Model_Northwind_EF.Sales_by_Category>;
    Sales_Totals_by_Amount: $data.EntitySet<Model_Northwind_EF.Sales_Totals_by_Amount>;
    Summary_of_Sales_by_Quarter: $data.EntitySet<Model_Northwind_EF.Summary_of_Sales_by_Quarter>;
    Summary_of_Sales_by_Year: $data.EntitySet<Model_Northwind_EF.Summary_of_Sales_by_Year>;
    
  }

}
